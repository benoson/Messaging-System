[{"D:\\React projects\\Messaging System\\client\\src\\index.tsx":"1","D:\\React projects\\Messaging System\\client\\src\\reportWebVitals.ts":"2","D:\\React projects\\Messaging System\\client\\src\\components\\App.tsx":"3","D:\\React projects\\Messaging System\\client\\src\\components\\sidebar\\LeftSidebar.tsx":"4","D:\\React projects\\Messaging System\\client\\src\\components\\navbar\\Navbar.tsx":"5","D:\\React projects\\Messaging System\\client\\src\\components\\compose-email-page\\ComposeEmailPage.tsx":"6","D:\\React projects\\Messaging System\\client\\src\\components\\user-item\\UserItem.tsx":"7","D:\\React projects\\Messaging System\\client\\src\\redux\\Reducer.ts":"8","D:\\React projects\\Messaging System\\client\\src\\redux\\ActionType.ts":"9","D:\\React projects\\Messaging System\\client\\src\\components\\welcome-page\\WelcomePage.tsx":"10","D:\\React projects\\Messaging System\\client\\src\\components\\login-section\\LoginSection.tsx":"11","D:\\React projects\\Messaging System\\client\\src\\components\\custom-button\\CustomButton.tsx":"12","D:\\React projects\\Messaging System\\client\\src\\components\\register-section\\RegisterSection.tsx":"13","D:\\React projects\\Messaging System\\client\\src\\components\\search-users-section\\SearchUsersSection.tsx":"14","D:\\React projects\\Messaging System\\client\\src\\Utils\\UsersUtils.ts":"15","D:\\React projects\\Messaging System\\client\\src\\redux\\Store.ts":"16","D:\\React projects\\Messaging System\\client\\src\\models\\Message.ts":"17","D:\\React projects\\Messaging System\\client\\src\\Utils\\MessagesUtils.ts":"18","D:\\React projects\\Messaging System\\client\\src\\Utils\\Interceptor.ts":"19","D:\\React projects\\Messaging System\\client\\src\\components\\my-emails-page\\MyEmailsPage.tsx":"20","D:\\React projects\\Messaging System\\client\\src\\components\\email\\Email.tsx":"21","D:\\React projects\\Messaging System\\client\\src\\models\\UserCredentialsDetails.ts":"22","D:\\React projects\\Messaging System\\client\\src\\socket\\socket.ts":"23","D:\\React projects\\Messaging System\\client\\src\\models\\ReceivedMessage.ts":"24","D:\\React projects\\Messaging System\\client\\src\\components\\sent-emails\\SentEmailsPage.tsx":"25"},{"size":633,"mtime":1612002542757,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":1179,"mtime":1612022116457,"results":"29","hashOfConfig":"27"},{"size":1529,"mtime":1612022095099,"results":"30","hashOfConfig":"27"},{"size":2062,"mtime":1612019591415,"results":"31","hashOfConfig":"27"},{"size":4316,"mtime":1612039701125,"results":"32","hashOfConfig":"27"},{"size":661,"mtime":1612020358025,"results":"33","hashOfConfig":"27"},{"size":3512,"mtime":1612039578271,"results":"34","hashOfConfig":"27"},{"size":354,"mtime":1612039500193,"results":"35","hashOfConfig":"27"},{"size":871,"mtime":1611903327338,"results":"36","hashOfConfig":"27"},{"size":2098,"mtime":1612020747874,"results":"37","hashOfConfig":"27"},{"size":1199,"mtime":1612020708825,"results":"38","hashOfConfig":"27"},{"size":1876,"mtime":1612020913091,"results":"39","hashOfConfig":"27"},{"size":2224,"mtime":1612020938990,"results":"40","hashOfConfig":"27"},{"size":3991,"mtime":1612019386885,"results":"41","hashOfConfig":"27"},{"size":120,"mtime":1611991170940,"results":"42","hashOfConfig":"27"},{"size":239,"mtime":1611985591897,"results":"43","hashOfConfig":"27"},{"size":3907,"mtime":1612039491196,"results":"44","hashOfConfig":"27"},{"size":511,"mtime":1612021054386,"results":"45","hashOfConfig":"27"},{"size":2367,"mtime":1612036917008,"results":"46","hashOfConfig":"27"},{"size":1570,"mtime":1612037997879,"results":"47","hashOfConfig":"27"},{"size":150,"mtime":1611926355953,"results":"48","hashOfConfig":"27"},{"size":1512,"mtime":1612037955513,"results":"49","hashOfConfig":"27"},{"size":247,"mtime":1612038040363,"results":"50","hashOfConfig":"27"},{"size":2226,"mtime":1612039324576,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1n5mxi6",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\React projects\\Messaging System\\client\\src\\index.tsx",[],["106","107"],"D:\\React projects\\Messaging System\\client\\src\\reportWebVitals.ts",[],"D:\\React projects\\Messaging System\\client\\src\\components\\App.tsx",[],"D:\\React projects\\Messaging System\\client\\src\\components\\sidebar\\LeftSidebar.tsx",[],"D:\\React projects\\Messaging System\\client\\src\\components\\navbar\\Navbar.tsx",[],"D:\\React projects\\Messaging System\\client\\src\\components\\compose-email-page\\ComposeEmailPage.tsx",["108"],"import TextField from '@material-ui/core/TextField';\r\nimport { useRef, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { ChangeEvent } from 'react';\r\nimport { ActionType } from '../../redux/ActionType';\r\nimport Store from '../../redux/Store';\r\nimport MessagesUtils from '../../Utils/MessagesUtils';\r\nimport CustomButton from '../custom-button/CustomButton';\r\nimport SearchUsersSection from '../search-users-section/SearchUsersSection';\r\nimport Socket from '../../socket/socket';\r\nimport { Redirect } from 'react-router-dom';\r\nimport UsersUtils from '../../Utils/UsersUtils';\r\nimport './ComposeEmailPage.css';\r\n\r\n\r\nexport default function ComposeEmailPage() {\r\n\r\n    const [receiver, setReceiver] = useState(\"\");\r\n    const formRef = useRef<HTMLFormElement>(null);\r\n    const socket = Socket.Instance;\r\n\r\n    useEffect(() => {\r\n        UsersUtils.handleUserLoggedStatus();\r\n        if (Store.getState().isLogged) {\r\n            \r\n            if (!socket.isConnectedToSocket) {\r\n                socket.initiateSocket();\r\n            }\r\n            const unsubscribe = Store.subscribe(() => {\r\n                const messageReceiver = Store.getState().composedMessage.receiverUsername;\r\n                setReceiver(messageReceiver);\r\n            });\r\n    \r\n            return () => {\r\n                unsubscribe();\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const handleSubjectValueChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n        const subjectInput: HTMLInputElement = event.target;\r\n        const subjectValue = subjectInput.value.trim();\r\n        Store.dispatch({type: ActionType.UpdateMessageSubject, payload: subjectValue});\r\n    }\r\n\r\n    const handleMessageContentValueChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n        const contentInput: HTMLInputElement = event.target;\r\n        const contentValue = contentInput.value.trim();\r\n        Store.dispatch({type: ActionType.UpdateMessageContent, payload: contentValue});\r\n    }\r\n\r\n    const onSendMessageClick = async (): Promise<void> => {\r\n        if (MessagesUtils.validateMessage()) {\r\n            const composedMessageFromStore = Store.getState().composedMessage;\r\n            const messageID = await MessagesUtils.sendMessageToSelectedUser(composedMessageFromStore);\r\n            const convertedMessageForDisplay = MessagesUtils.convertMessageForDisplay(messageID, composedMessageFromStore);\r\n            MessagesUtils.updateSentMessageInDisplay(convertedMessageForDisplay);\r\n            socket.emitMessage(convertedMessageForDisplay, composedMessageFromStore.receiverID);\r\n            Store.dispatch({type: ActionType.ClearMessage});\r\n            formRef.current!.reset();\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        Store.getState().isLogged ?\r\n        <div className=\"composeEmailPage\">\r\n            <h1 className=\"composeEmailHeader\">Compose An Email</h1>\r\n\r\n            <form className=\"composeEmailForm\" ref={formRef}>\r\n                <div className=\"composeEmailSectionLeft\">\r\n                    <TextField required className=\"inputField\" label=\"Subject\" onChange={handleSubjectValueChange} />\r\n\r\n                    <TextField\r\n                        required\r\n                        id=\"messageInput\"\r\n                        margin=\"normal\"\r\n                        className=\"inputField\"\r\n                        label=\"Your message\"\r\n                        multiline\r\n                        rows={12}\r\n                        variant=\"outlined\"\r\n                        onChange={handleMessageContentValueChange}\r\n                    />\r\n\r\n                    {receiver.trim() !== \"\" && <h2 className=\"receiverText\">Sending To: <span className=\"receiverName\">{receiver}</span></h2>}\r\n\r\n                    <CustomButton\r\n                        buttonText=\"Send\"\r\n                        backgroundColor=\"transparent\"\r\n                        textColor=\"lightseagreen\"\r\n                        borderColor=\"lightseagreen\"\r\n                        hoverBgColor=\"lightseagreen\"\r\n                        hoverTextColor=\"white\"\r\n                        toggleFunction={onSendMessageClick}\r\n                    />\r\n                </div>\r\n\r\n                <SearchUsersSection />\r\n            </form>\r\n        </div>\r\n        :\r\n        <Redirect to=\"/welcome\" />\r\n        \r\n    )\r\n}\r\n","D:\\React projects\\Messaging System\\client\\src\\components\\user-item\\UserItem.tsx",[],["109","110"],"D:\\React projects\\Messaging System\\client\\src\\redux\\Reducer.ts",[],"D:\\React projects\\Messaging System\\client\\src\\redux\\ActionType.ts",[],"D:\\React projects\\Messaging System\\client\\src\\components\\welcome-page\\WelcomePage.tsx",[],"D:\\React projects\\Messaging System\\client\\src\\components\\login-section\\LoginSection.tsx",[],"D:\\React projects\\Messaging System\\client\\src\\components\\custom-button\\CustomButton.tsx",[],"D:\\React projects\\Messaging System\\client\\src\\components\\register-section\\RegisterSection.tsx",[],"D:\\React projects\\Messaging System\\client\\src\\components\\search-users-section\\SearchUsersSection.tsx",[],"D:\\React projects\\Messaging System\\client\\src\\Utils\\UsersUtils.ts",[],"D:\\React projects\\Messaging System\\client\\src\\redux\\Store.ts",[],"D:\\React projects\\Messaging System\\client\\src\\models\\Message.ts",[],"D:\\React projects\\Messaging System\\client\\src\\Utils\\MessagesUtils.ts",[],"D:\\React projects\\Messaging System\\client\\src\\Utils\\Interceptor.ts",[],"D:\\React projects\\Messaging System\\client\\src\\components\\my-emails-page\\MyEmailsPage.tsx",["111"],"import { useEffect, useState } from \"react\"\r\nimport ReceivedMessage from \"../../models/ReceivedMessage\";\r\nimport Store from \"../../redux/Store\";\r\nimport MessagesUtils from \"../../Utils/MessagesUtils\";\r\nimport Email from \"../email/Email\";\r\nimport Socket from '../../socket/socket';\r\nimport UsersUtils from \"../../Utils/UsersUtils\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport NoEmails from \"../../assets/No-Emails.svg\";\r\nimport './MyEmailsPage.css';\r\n\r\n\r\nexport default function MyEmails() {\r\n\r\n    const [myEmails, setMyEmails] = useState<ReceivedMessage[]>(new Array <ReceivedMessage>());\r\n    const socket = Socket.Instance;\r\n\r\n    useEffect(() => {\r\n        UsersUtils.handleUserLoggedStatus();\r\n        if (Store.getState().isLogged) {\r\n    \r\n            if (!socket.isConnectedToSocket) {\r\n                socket.initiateSocket();\r\n            }\r\n            checkIfShuoldGetAllEmailsFromServer();\r\n            \r\n            const unsubscribe = Store.subscribe((): void => {\r\n                const allUserMessagesFromStore = Store.getState().allUserMessages;\r\n                setMyEmails(allUserMessagesFromStore);\r\n            });\r\n    \r\n            return () => {\r\n                unsubscribe();\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const checkIfShuoldGetAllEmailsFromServer = async (): Promise<void> => {\r\n        const allUserMessagesFromStore = Store.getState().allUserMessages;\r\n        if (allUserMessagesFromStore.length === 0) {\r\n            await MessagesUtils.getAllUserMessagesFromServer();\r\n        }\r\n        else {\r\n            setMyEmails(allUserMessagesFromStore);\r\n        }\r\n    }\r\n\r\n    return (\r\n        Store.getState().isLogged ?\r\n\r\n            <div className=\"myEmailsContainer\">\r\n                {myEmails.length > 0 ?\r\n    \r\n                    <div>\r\n                        <h1 className=\"myEmailsHeader\">My Emails</h1>\r\n                        {myEmails.map( (email, index) =>\r\n                            <Email key={index} email={email} isShowDeleteButton={true} />\r\n                        )}\r\n                    </div>\r\n                :\r\n                    <div>\r\n                        <h1>No Emails Yet</h1>\r\n                        <img className=\"noEmailsSVG\" src={NoEmails} alt=\"no-emails\"/>\r\n                    </div>}\r\n            </div>\r\n\r\n        :\r\n        <Redirect to=\"/welcome\" />\r\n    )\r\n}\r\n","D:\\React projects\\Messaging System\\client\\src\\components\\email\\Email.tsx",[],"D:\\React projects\\Messaging System\\client\\src\\models\\UserCredentialsDetails.ts",[],"D:\\React projects\\Messaging System\\client\\src\\socket\\socket.ts",[],"D:\\React projects\\Messaging System\\client\\src\\models\\ReceivedMessage.ts",[],"D:\\React projects\\Messaging System\\client\\src\\components\\sent-emails\\SentEmailsPage.tsx",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":38,"column":8,"nodeType":"118","endLine":38,"endColumn":10,"suggestions":"119"},{"ruleId":"112","replacedBy":"120"},{"ruleId":"114","replacedBy":"121"},{"ruleId":"116","severity":1,"message":"117","line":36,"column":8,"nodeType":"118","endLine":36,"endColumn":10,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["125"],["123"],["124"],["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"127","fix":"129"},"Update the dependencies array to be: [socket]",{"range":"130","text":"131"},{"range":"132","text":"131"},[1367,1369],"[socket]",[1247,1249]]